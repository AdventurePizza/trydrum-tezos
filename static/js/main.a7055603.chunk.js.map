{"version":3,"sources":["firebaseContext.tsx","App.tsx","assets/drum.svg","assets/drumbeat.mp3","assets/musical-note.svg","token-transfer.ts","reportWebVitals.ts","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","activeAccount","db","firestore","FirebaseContext","React","createContext","updateDrumCount","getDrumCount","Promise","resolve","FirebaseProvider","children","Provider","value","amt","collection","doc","set","drumbeatCount","FieldValue","increment","merge","a","docRef","get","exists","data","acc","require","token_transfer","rpcUrl","tezos","this","TezosToolkit","setSignerProvider","InMemorySigner","fromFundraiser","email","password","mnemonic","join","contract","sender","receiver","amount","at","then","console","log","methods","transfer","send","op","hash","confirmation","catch","error","JSON","stringify","socket","io","transports","dAppClient","DAppClient","name","App","drumRef","createRef","audioRef","_audioRef","useRef","toUpdateCountRef","useState","notes","setNotes","hasClickedDrum","setHasClickedDrum","useContext","firebaseUpdateDrumCount","drumCount","setDrumCount","enqueueSnackbar","useSnackbar","top","left","noteCoords","setNoteCoords","synced","setSynced","setBalance","showUnsync","setShowUnsync","setXtzPrice","drumReward","setDrumReward","useEffect","getActiveAccount","address","slice","fetch","method","headers","body","query","variables","res","json","result","reverseRecord","domain","response","balance","USD","getAcc","current","setCoords","useCallback","rect","getBoundingClientRect","height","width","count","onDrumbeat","currentTime","play","concat","key","uuidv4","variant","on","window","addEventListener","off","removeEventListener","_","throttle","clearActiveAccount","sync","requestPermissions","permissions","location","reload","claimRewards","className","style","minHeight","innerHeight","src","drumBeat","ref","autoPlay","muted","onClick","emit","alt","drum","TransitionGroup","map","note","CSSTransition","timeout","classNames","onEntered","noteIndex","findIndex","_note","musicNote","Button","title","open","unsync","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","maxSnack","document","getElementById"],"mappings":"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","file":"static/js/main.a7055603.chunk.js","sourcesContent":["import React from \"react\";\nimport firebase from \"firebase\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyC19cZLLW3oYWjQxWEFPhdtzSOGWQcgQjQ\",\n  authDomain: \"adventure-ea7cd.firebaseapp.com\",\n  databaseURL: \"https://adventure-ea7cd.firebaseio.com\",\n  projectId: \"adventure-ea7cd\",\n  storageBucket: \"adventure-ea7cd.appspot.com\",\n  messagingSenderId: \"753400311148\",\n  appId: \"1:753400311148:web:f8f56db5a153280f185749\",\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\n\nexport interface IFirebaseContext {\n  updateDrumCount: (amt: number) => void;\n  getDrumCount: () => Promise<number>;\n}\n\nexport const FirebaseContext = React.createContext<IFirebaseContext>({\n  updateDrumCount: () => {},\n  getDrumCount: () => Promise.resolve(0),\n});\n\nexport const FirebaseProvider: React.FC = ({ children }) => {\n  const updateDrumCount = (amt: number) => {\n    const docRef = db.collection(\"drumbeat-tezos\").doc(\"tracking\");\n    docRef.set(\n      { drumbeatCount: firebase.firestore.FieldValue.increment(amt) },\n      {\n        merge: true,\n      }\n    );\n  };\n\n  const getDrumCount = () => {\n    return new Promise<number>(async (resolve) => {\n      const docRef = db.collection(\"drumbeat-tezos\").doc(\"tracking\");\n      const doc = await docRef.get();\n\n      if (!doc.exists) {\n        resolve(0);\n      } else {\n        const data = doc.data() as { drumbeatCount: number };\n        resolve(data.drumbeatCount);\n      }\n    });\n  };\n\n  return (\n    <FirebaseContext.Provider\n      value={{\n        updateDrumCount,\n        getDrumCount,\n      }}\n    >\n      {children}\n    </FirebaseContext.Provider>\n  );\n};\n","import \"./App.css\";\n\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\"; // ES6\nimport React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\n\nimport { FirebaseContext } from \"./firebaseContext\";\nimport { IconButton, Button } from \"@material-ui/core\";\nimport { Twitter } from \"@material-ui/icons\";\nimport _ from \"underscore\";\nimport drum from \"./assets/drum.svg\";\n//@ts-ignore\nimport drumBeat from \"./assets/drumbeat.mp3\";\n// import drumBeat from \"./assets/leo.mp3\";\nimport io from \"socket.io-client\";\nimport musicNote from \"./assets/musical-note.svg\";\nimport { useSnackbar } from \"notistack\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { DAppClient } from \"@airgap/beacon-sdk\";\nimport { token_transfer } from './token-transfer'\n\nconst socketURL =\"wss://adventure-drumbeat.herokuapp.com\";\n// const socketURL = \"wss://adventure-drumbeat.herokuapp.com\";\nconst socket = io(socketURL, { transports: [\"websocket\"] });\nconst dAppClient = new DAppClient({ name: \"Beacon Docs\" });\nlet activeAccount;\n\ninterface INote {\n  key: string;\n}\n\nfunction App() {\n  const drumRef = React.createRef<HTMLImageElement>();\n  const audioRef = React.createRef<HTMLAudioElement>();\n  const _audioRef = useRef<HTMLAudioElement>();\n\n  const toUpdateCountRef = useRef<number>(0);\n\n  const [notes, setNotes] = useState<INote[]>([]);\n  const [hasClickedDrum, setHasClickedDrum] = useState(false);\n  const { updateDrumCount: firebaseUpdateDrumCount, getDrumCount } = useContext(\n    FirebaseContext\n  );\n\n  const [drumCount, setDrumCount] = useState(-1);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [noteCoords, setNoteCoords] = useState<{ top: number; left: number }>({\n    top: 0,\n    left: 0,\n  });\n\n\tconst [synced, setSynced] = useState('sync');\n\tconst [balance, setBalance] = useState(0);\n\tconst [showUnsync, setShowUnsync] = useState(false);\n\tconst [xtzPrice, setXtzPrice] = useState(0);\n\n  const [drumReward, setDrumReward] = useState(0);\n\n  useEffect(() => {\n\t\tasync function getAcc() {\n\t\t\tactiveAccount = await dAppClient.getActiveAccount();\n\t\t\tif (activeAccount){\n\t\t\t  setSynced(activeAccount.address.slice(0, 6) + \"...\" + activeAccount.address.slice(32, 36) );\n        //fetch wallet name if it exist for example, trydrum.tez\n\t\t\t  let domain;\n\t\t\t  await fetch('https://api.tezos.domains/graphql', {\n\t\t\t\t  method: 'POST',\n\t\t\t\t  headers: {\n\t\t\t\t\t  'Content-Type': 'application/json',\n\t\t\t\t  },\n\t\t\t\t  body: JSON.stringify({\n\t\t\t\t\t  query: `\n\t\t\t\t\t\t\t  {\n\t\t\t\t\t\t\t\t  reverseRecord(address: \"`+ activeAccount.address +`\"){owner domain{name}}\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t  `,\n\t\t\t\t\t  variables: {\n\t\t\t\t\t  },\n\t\t\t\t  }\n\t\t\t\t  ),\n\t\t\t\t  })\n\t\t\t\t  .then((res) => res.json())\n\t\t\t\t  .then((result) => {\n\t\t\t\t\t  console.log(result);\t\n\t\t\t\t\t  if(result.data.reverseRecord){\n\t\t\t\t\t\t\tdomain = result.data.reverseRecord.domain.name;\n\t\t\t\t\t\t\tsetSynced(domain);\n\t\t\t\t\t\t}\n\t\t\t\t  });\n\t\t\t  \n\t\t\t  setShowUnsync(true);\n\t\t\t  \n        //set XTZ balance\n\t\t\t  fetch('https://api.tzkt.io/v1/accounts/' + activeAccount.address)\n\t\t\t\t.then(response => response.json())\n\t\t\t\t.then(data => setBalance(data.balance))\n\n        fetch('https://min-api.cryptocompare.com/data/price?fsym=XTZ&tsyms=USD')\n\t\t\t\t.then(response => response.json())\n\t\t\t\t.then(data => setXtzPrice(data.USD))\n\t\t\t}\n      //case its not already synced\n\t\t\telse{\n\t\t\t  setSynced('sync');\n\t\t\t  setShowUnsync(false);\n\t\t\t}\n\t\t}\n\t\t  getAcc();\n\t}, []);\n\n  useEffect(() => {\n    if (audioRef.current) {\n      _audioRef.current = audioRef.current;\n    }\n  });\n\n  const setCoords = useCallback(() => {\n    if (drumRef.current) {\n      const rect = drumRef.current.getBoundingClientRect();\n      setNoteCoords({\n        top: rect.top - rect.height / 2,\n        left: rect.left + rect.width / 2 - 25, // noteWidth = 50\n      });\n    }\n  }, [drumRef]);\n\n  useEffect(() => {\n    getDrumCount().then((count) => {\n      setDrumCount(count);\n    });\n  }, [getDrumCount]);\n\n  useEffect(() => {\n    const onDrumbeat = () => {\n      if (_audioRef.current) {\n        _audioRef.current.currentTime = 0;\n        _audioRef.current.play();\n        setDrumCount((count) => count + 1);\n      }\n\n      setNotes((notes) => notes.concat({ key: uuidv4() }));\n      enqueueSnackbar(\"someone beat the drum!\", {\n        variant: \"default\",\n      });\n    };\n\n    socket.on(\"drumbeat\", onDrumbeat);\n\n    window.addEventListener(\"resize\", setCoords);\n\n    return () => {\n      socket.off(\"drumbeat\", onDrumbeat);\n      window.removeEventListener(\"resize\", setCoords);\n    };\n  }, [enqueueSnackbar, setCoords]);\n\n  useEffect(() => {\n    if (drumRef.current && (noteCoords.top === 0 || noteCoords.left === 0)) {\n      setCoords();\n    }\n  }, [drumRef, noteCoords, setCoords]);\n\n  const onClickDrum = () => {\n    setNotes((notes) => notes.concat({ key: uuidv4() }));\n    setHasClickedDrum(true);\n\n    if (audioRef.current) {\n      audioRef.current.muted = false;\n      audioRef.current.currentTime = 0;\n      audioRef.current.play();\n    }\n\n    socket.emit(\"drumbeat\");\n\n    if (toUpdateCountRef.current !== null) {\n      toUpdateCountRef.current++;\n      updateDrumCount();\n    } else {\n      toUpdateCountRef.current = 0;\n    }\n\n    setDrumCount((count) => count + 1);\n    setDrumReward((drumReward) => drumReward + 1);\n  };\n\n  // eslint-disable-next-line\n  const updateDrumCount = useCallback(\n    _.throttle(() => {\n      if (toUpdateCountRef.current) {\n        firebaseUpdateDrumCount(toUpdateCountRef.current);\n        toUpdateCountRef.current = 0;\n      }\n    }, 3000),\n    []\n  );\n\n  async function unsync() {\n\t\tactiveAccount = await dAppClient.getActiveAccount();\n\t\tif (activeAccount) {\n\t\t  // User already has account connected, everything is ready\n\t\t  // You can now do an operation request, sign request, or send another permission request to switch wallet\n\t\t  dAppClient.clearActiveAccount().then(async () => {\n\t\t\tactiveAccount = await dAppClient.getActiveAccount();\n\t\n\t\t\tsetSynced('sync');\n\t\t\tsetShowUnsync(false);\n\t\t\tsetBalance(0);\n\t\t  });\n\t\t}\n\t  }\n\t  \n\tasync function sync() {\n\t\tactiveAccount = await dAppClient.getActiveAccount();\n\t\tif (activeAccount) {\n\t\t  // User already has account connected, everything is ready\n\t\t  // You can now do an operation request, sign request, or send another permission request to switch wallet\n\n\t\t  console.log(\"Already connected:\", activeAccount.address);\n\t\t  return activeAccount;\n\t\t} else {\n\t\t  // The user is not connected. A button should be displayed where the user can connect to his wallet.\n\t\t  console.log(\"Not connected!\");\n\t\t  try {\n\t\t\tconsole.log(\"Requesting permissions...\");\n\t\t\tconst permissions = await dAppClient.requestPermissions();\n\t\t\tconsole.log(\"Got permissions:\", permissions.address);\n\t\t\tsetSynced(permissions.address)\n\t\t\tconsole.log(\"reload\")\n\t\t\twindow.location.reload();\n\t\t\tsetShowUnsync(true);\n\n\t\t\tfetch('https://api.tzkt.io/v1/accounts/' + permissions.address)\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => setBalance(data.balance))\n\t\t  } catch (error) {\n\t\n\t\t\tconsole.log(\"Got error:\", error);\n\t\t  }\n\t\t}\n\t  }\n\n    async function claimRewards() {\n      const RPC_URL = 'https://granadanet.api.tez.ie';\n      const CONTRACT = 'KT1VGf4ZoNMWNfBTEyBbRTX6q6TgHRnZ24zp' //address of the published contract\n      const SENDER =   'tz1aLMj6CXkADSH9tBtRLAcigBqUaSA3sRwx' //public address of the sender (find it in acc.json)\n      const RECEIVER = 'tz2KxNHVsBwmPRgMZZKJt3mYnPMcK8Smw49g' // recipient's public address (take it from the Tezos wallet you had created)\n\n      if(drumReward > 0){\n        console.log(new token_transfer(RPC_URL).transfer(CONTRACT, SENDER, RECEIVER, drumReward));\n        enqueueSnackbar(\"Recieved \" + drumReward + \" DRUM !\" , {\n          variant: \"success\",\n        });\n        setDrumReward(0);\n      }\n      else{\n        enqueueSnackbar(\"You have nothing to claim :(\" , {\n          variant: \"warning\",\n        });\n      }\n\n    }\n  return (\n    <div\n      className=\"app-container\"\n      style={{ minHeight: window.innerHeight - 10 }}\n    >\n      <audio src={drumBeat} ref={audioRef} autoPlay muted />\n\n      <div className=\"top-left\"> \t\n        drum\n      </div>\n\n      <div className=\"top-middle\"> \t\n        \n      </div>\n\n\n      {drumCount >= 0 && <div className=\"top-right\">{drumCount}  </div>}\n\n      <img\n        ref={drumRef}\n        onClick={onClickDrum}\n        alt=\"drum\"\n        src={drum}\n        className=\"drum\"\n      />\n      {!hasClickedDrum && <div>Click the drum!</div>}\n\n      <TransitionGroup>\n        {notes.map((note) => (\n          <CSSTransition\n            key={note.key}\n            timeout={1000}\n            classNames=\"note-transition\"\n            onEntered={() => {\n              const noteIndex = notes.findIndex(\n                (_note) => _note.key === note.key\n              );\n              setNotes([\n                ...notes.slice(0, noteIndex),\n                ...notes.slice(noteIndex + 1),\n              ]);\n            }}\n          >\n            <img\n              alt=\"music note\"\n              src={musicNote}\n              className=\"music-note\"\n              style={{\n                top: noteCoords.top,\n                left: noteCoords.left,\n              }}\n            />\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n\n      <div className=\"bottom-left\" >\n        <Button  title={\"Adventure Networks\"} onClick={() => { window.open('https://adventurenetworks.net/#/'); }} >Adventure <br></br> Networks </Button>\n      </div>\n\n      <div className=\"bottom-right\">\n\n        <div className=\"right\">\n        <Button  title={\"claim\"} onClick={ async () => { \tawait claimRewards();\t}} >  Claim {drumReward} DRUM  </Button> \n        </div>\n        <br></br>\n        <br></br>\n        {showUnsync && <Button  title={\"unsync\"} onClick={() => { unsync() }} >unsync </Button>} \n        | \n        <Button  title={\"sync\"}  onClick={async () => { \tawait sync();\t}} >{synced} </Button> \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/drum.5ae1d20c.svg\";","export default __webpack_public_path__ + \"static/media/drumbeat.e0f520f5.mp3\";","export default __webpack_public_path__ + \"static/media/musical-note.49e6a279.svg\";","//importing the methods of Taquito and the file with the test account data acc.json\n\nimport { TezosToolkit } from '@taquito/taquito'\nimport { InMemorySigner } from '@taquito/signer'\nconst acc = require('./acc.json')\nexport class token_transfer {\n  // setting up the link to the testnet’s public node\n  private tezos: TezosToolkit\n  rpcUrl: string\n\n  constructor(rpcUrl: string) {\n    this.tezos = new TezosToolkit(rpcUrl)\n    this.rpcUrl = rpcUrl\n\n    //reading the mail, password, and the passphrase that can produce the private key\n    this.tezos.setSignerProvider(InMemorySigner.fromFundraiser(acc.email, acc.password, acc.mnemonic.join(' ')))\n  }\n\n  // declaring the method transfer that has the following params:\n  //\n  // 1) contract: contract address;\n  // 2) sender: sender address;\n  // 3) receiver: recipient address;\n  // 4) amount: amount of tokens to be sent.\n\n  public transfer(contract: string, sender: string, receiver: string, amount: number) {\n    this.tezos.contract\n      .at(contract) //calling the contract at the address\n      .then((contract) => {\n        console.log(`Sending ${amount} from ${sender} to ${receiver}...`)\n        //calling the entry point transfer, send the reciever/sender addresses and the amount of tokens to be sent to it.\n        return contract.methods.transfer(sender, receiver, amount).send()\n      })\n      .then((op) => {\n        console.log(`Awaiting for ${op.hash} to be confirmed...`)\n        return op.confirmation(1).then(() => op.hash) //waiting for 1 network confirmation\n      })\n      .then((hash) => console.log(`Hash: https://granada.tzstats.com/${hash}`)) //getting the operation’s hash\n      .catch((error) => console.log(`Error: ${JSON.stringify(error, null, 2)}`))\n  }\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import \"./index.css\";\n\nimport App from \"./App\";\nimport { FirebaseProvider } from \"./firebaseContext\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { SnackbarProvider } from \"notistack\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <FirebaseProvider>\n    <SnackbarProvider maxSnack={3}>\n      <App />\n    </SnackbarProvider>\n  </FirebaseProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}