{"version":3,"sources":["firebaseContext.tsx","assets/drum.svg","assets/construction.png","assets/drumbeat.mp3","assets/musical-note.svg","App.tsx","reportWebVitals.ts","index.tsx"],"names":["FirebaseContext","React","createContext","updateDrumCount","Promise","resolve","isSuccessful","getDrumCount","claim","fetchBase","FirebaseProvider","children","useCallback","amt","address","a","console","log","fetch","method","headers","body","JSON","stringify","fetchRes","ok","message","statusText","json","Provider","value","socketURL","window","location","hostname","socket","io","transports","dAppClient","DAppClient","name","tempId","uuidv4","App","useState","activeAccount","setActiveAccount","drumRef","createRef","audioRef","_audioRef","useRef","toUpdateCountRef","notes","setNotes","hasClickedDrum","setHasClickedDrum","useContext","drumCount","setDrumCount","enqueueSnackbar","useSnackbar","top","left","noteCoords","setNoteCoords","synced","setSynced","setBalance","showUnsync","setShowUnsync","setXtzPrice","drumReward","setDrumReward","isMobile","innerWidth","useEffect","getActiveAccount","slice","query","variables","then","res","result","data","reverseRecord","domain","response","balance","USD","getAcc","current","setCoords","rect","getBoundingClientRect","height","width","clearActiveAccount","sync","requestPermissions","permissions","count","claimRewards","variant","onDrumbeat","currentTime","play","concat","key","on","addEventListener","off","removeEventListener","className","style","minHeight","innerHeight","src","drumBeat","ref","autoPlay","muted","fontSize","onClick","emit","alt","drum","TransitionGroup","map","note","CSSTransition","timeout","classNames","onEntered","noteIndex","findIndex","_note","musicNote","Button","title","size","open","construction","display","justifyContent","marginRight","alignItems","unsync","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","maxSnack","document","getElementById"],"mappings":"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","file":"static/js/main.edbfdac6.chunk.js","sourcesContent":["// @ts-nocheck\n\nimport React, { useCallback, useContext, useEffect } from 'react';\n\n\nexport interface IFirebaseContext {\n\tupdateDrumCount: (amt: number, address: string) => void;\n\tgetDrumCount: (address: string) => Promise<IFetchResponseBase>;\n\tclaim: (address: string) => Promise<IFetchResponseBase>;\n}\n\nexport const FirebaseContext = React.createContext<IFirebaseContext>({\n\tupdateDrumCount: () => Promise.resolve({ isSuccessful: false }),\n\tgetDrumCount: () => Promise.resolve({ isSuccessful: false }),\n\tclaim: () => Promise.resolve({ isSuccessful: false }),\n});\n\nconst fetchBase =\n\tprocess.env.NODE_ENV === 'development'\n\t\t? ''\n\t\t: 'https://matter-backend.herokuapp.com';\n\n\nexport const FirebaseProvider: React.FC = ({ children }) => {\n\n\n\tconst updateDrumCount = useCallback(\n\t\tasync (amt: number, address: string): Promise<IFetchResponseBase> => {\n\t\t\tconsole.log(\"ich will \" + amt)\n\t\t\tconst fetchRes = await fetch(fetchBase + `/users/drum/${address}`, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t}\n\t\t\t\t,\n\t\t\t\tbody: JSON.stringify({ amt: amt})\n\t\t\t});\n\n\t\t\tif (fetchRes.ok) {\n\t\t\t\treturn { isSuccessful: true };\n\t\t\t}\n\n\t\t\treturn { isSuccessful: false, message: fetchRes.statusText };\n\t\t},\n\t\t[]\n\t);\n\n\tconst claim = useCallback(\n\t\tasync (address: string): Promise<IFetchResponseBase> => {\n\n\t\t\tconst fetchRes = await fetch(fetchBase + `/users/drum/claim/${address}`, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (fetchRes.ok) {\n\t\t\t\treturn { isSuccessful: true };\n\t\t\t}\n\n\t\t\treturn { isSuccessful: false, message: fetchRes.statusText };\n\t\t},\n\t\t[]\n\t);\n\n\tconst getDrumCount = useCallback(\n\t\tasync (address: string): Promise<IFetchResponseBase> => {\n\t\t\tconsole.log(\"get will \" )\n\t\t\tconst fetchRes = await fetch(fetchBase + `/users/drum/${address}`, {\n\t\t\t\tmethod: 'GET'\n\t\t\t});\n\n\t\t\tif (fetchRes.ok) {\n\t\t\t\treturn  await fetchRes.json();\n\t\t\t}\n\n\t\t\t//return { isSuccessful: false, message: fetchRes.statusText };\n\t\t},\n\t\t[]\n\t);\n\n\t\t/*\n\tconst updateDrumCount = (amt: number) => {\n\n\n\n\t\tconst docRef = db.collection(\"drumbeat\").doc(\"tracking\");\n\t\tdocRef.set(\n\t\t  { drumbeatCount: firebase.firestore.FieldValue.increment(amt) },\n\t\t  {\n\t\t\tmerge: true,\n\t\t  }\n\t\t);\n\n\t};\n\n\tconst getDrumCount = () => {\n/*\n\t\treturn new Promise<number>(async (resolve) => {\n\t\t  const docRef = db.collection(\"drumbeat\").doc(\"tracking\");\n\t\t  const doc = await docRef.get();\n\t\n\t\t  if (!doc.exists) {\n\t\t\tresolve(0);\n\t\t  } else {\n\t\t\tconst data = doc.data() as { drumbeatCount: number };\n\t\t\tresolve(data.drumbeatCount);\n\t\t  }\n\t\t});\n\n\t};\n\t*/\n\n\treturn (\n\t\t<FirebaseContext.Provider\n\t\t\tvalue={{\n\t\t\t\tupdateDrumCount,\n\t\t\t\tclaim,\n\t\t\t\tgetDrumCount\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</FirebaseContext.Provider>\n\t);\n};\n","export default __webpack_public_path__ + \"static/media/drum.5ae1d20c.svg\";","export default __webpack_public_path__ + \"static/media/construction.9e9ab6c6.png\";","export default __webpack_public_path__ + \"static/media/drumbeat.e0f520f5.mp3\";","export default __webpack_public_path__ + \"static/media/musical-note.49e6a279.svg\";","\n// @ts-nocheck\nimport \"./App.css\";\n\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\"; // ES6\nimport React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\n\nimport { FirebaseContext } from \"./firebaseContext\";\nimport { IconButton, Button } from \"@material-ui/core\";\n\nimport _ from \"underscore\";\nimport drum from \"./assets/drum.svg\";\nimport construction from \"./assets/construction.png\";\n//@ts-ignore\nimport drumBeat from \"./assets/drumbeat.mp3\";\n// import drumBeat from \"./assets/leo.mp3\";\nimport io from \"socket.io-client\";\nimport musicNote from \"./assets/musical-note.svg\";\nimport { useSnackbar } from \"notistack\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { DAppClient } from \"@airgap/beacon-sdk\";\n\n\nconst socketURL =\n  window.location.hostname === \"localhost\"\n    ? \"ws://localhost:8000\"\n    : \"wss://trydrum-backend.herokuapp.com\";\n\n// const socketURL = \"wss://adventure-drumbeat.herokuapp.com\";\nconst socket = io(socketURL, { transports: [\"websocket\"] });\nconst dAppClient = new DAppClient({ name: \"Beacon Docs\" });\n//let activeAccount;\nlet tempId = uuidv4();\n\ninterface INote {\n  key: string;\n}\n\nfunction App() {\n  const [activeAccount, setActiveAccount] = useState();\n\n  const drumRef = React.createRef<HTMLImageElement>();\n  const audioRef = React.createRef<HTMLAudioElement>();\n  const _audioRef = useRef<HTMLAudioElement>();\n\n  const toUpdateCountRef = useRef<number>(0);\n\n  const [notes, setNotes] = useState<INote[]>([]);\n  const [hasClickedDrum, setHasClickedDrum] = useState(false);\n  /*const { updateDrumCount: firebaseUpdateDrumCount, getDrumCount } = useContext(\n    FirebaseContext\n  );\n  */\n  const { updateDrumCount, claim, getDrumCount } = useContext(\n    FirebaseContext\n  );\n  \n  const [drumCount, setDrumCount] = useState(-1);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [noteCoords, setNoteCoords] = useState<{ top: number; left: number }>({\n    top: 0,\n    left: 0,\n  });\n\n\tconst [synced, setSynced] = useState('sync');\n\tconst [balance, setBalance] = useState(0);\n\tconst [showUnsync, setShowUnsync] = useState(false);\n\tconst [xtzPrice, setXtzPrice] = useState(0);\n\n  const [drumReward, setDrumReward] = useState(0);\n  const isMobile = window.innerWidth <= 500;\n\n  useEffect(() => {\n\t\tasync function getAcc() {\n      setActiveAccount( await dAppClient.getActiveAccount());\n\t\t\t//activeAccount = await dAppClient.getActiveAccount();\n\t\t\tif (activeAccount){\n\t\t\t  setSynced(activeAccount.address.slice(0, 6) + \"...\" + activeAccount.address.slice(32, 36) );\n        //fetch wallet name if it exist for example, trydrum.tez\n\t\t\t  let domain;\n\t\t\t  await fetch('https://api.tezos.domains/graphql', {\n\t\t\t\t  method: 'POST',\n\t\t\t\t  headers: {\n\t\t\t\t\t  'Content-Type': 'application/json',\n\t\t\t\t  },\n\t\t\t\t  body: JSON.stringify({\n\t\t\t\t\t  query: `\n\t\t\t\t\t\t\t  {\n\t\t\t\t\t\t\t\t  reverseRecord(address: \"`+ activeAccount.address +`\"){owner domain{name}}\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t  `,\n\t\t\t\t\t  variables: {\n\t\t\t\t\t  },\n\t\t\t\t  }\n\t\t\t\t  ),\n\t\t\t\t  })\n\t\t\t\t  .then((res) => res.json())\n\t\t\t\t  .then((result) => {\n\t\t\t\t\t  //console.log(result);\t\n\t\t\t\t\t  if(result.data.reverseRecord){\n\t\t\t\t\t\t\tdomain = result.data.reverseRecord.domain.name;\n\t\t\t\t\t\t\tsetSynced(domain);\n\t\t\t\t\t\t}\n\t\t\t\t  });\n\t\t\t  \n\t\t\t  setShowUnsync(true);\n\t\t\t  \n        //set XTZ balance\n\t\t\t  fetch('https://api.tzkt.io/v1/accounts/' + activeAccount.address)\n\t\t\t\t.then(response => response.json())\n\t\t\t\t.then(data => setBalance(data.balance))\n\n        fetch('https://min-api.cryptocompare.com/data/price?fsym=XTZ&tsyms=USD')\n\t\t\t\t.then(response => response.json())\n\t\t\t\t.then(data => setXtzPrice(data.USD))\n\t\t\t}\n      //case its not already synced\n\t\t\telse{\n\t\t\t  setSynced('sync');\n\t\t\t  setShowUnsync(false);\n\t\t\t}\n\t\t}\n\t\t  getAcc();\n\t}, [activeAccount]);\n\n  useEffect(() => {\n    if (audioRef.current) {\n      _audioRef.current = audioRef.current;\n    }\n  });\n\n  const setCoords = useCallback(() => {\n    if (drumRef.current) {\n      const rect = drumRef.current.getBoundingClientRect();\n      setNoteCoords({\n        top: rect.top - rect.height / 2,\n        left: rect.left + rect.width / 2 - 25, // noteWidth = 50\n      });\n    }\n  }, [drumRef]);\n\n  \n  useEffect(() => {\n    getDrumCount(activeAccount ? activeAccount.address : tempId).then((res) => {\n      if(res){\n        setDrumCount(res.count);\n        setDrumReward(res.claim);\n      }\n    });\n  }, [getDrumCount, activeAccount]);\n\n\n  useEffect(() => {\n    const onDrumbeat = () => {\n      if (_audioRef.current) {\n        _audioRef.current.currentTime = 0;\n        _audioRef.current.play();\n        setDrumCount((count) => count + 1);\n      }\n\n      setNotes((notes) => notes.concat({ key: uuidv4() }));\n      enqueueSnackbar(\"someone beat the drum!\", {\n        variant: \"default\",\n      });\n    };\n\n    socket.on(\"drumbeat\", onDrumbeat);\n\n    window.addEventListener(\"resize\", setCoords);\n\n    return () => {\n      socket.off(\"drumbeat\", onDrumbeat);\n      window.removeEventListener(\"resize\", setCoords);\n    };\n  }, [enqueueSnackbar, setCoords]);\n\n  useEffect(() => {\n    if (drumRef.current && (noteCoords.top === 0 || noteCoords.left === 0)) {\n      setCoords();\n    }\n  }, [drumRef, noteCoords, setCoords]);\n\n  const onClickDrum = () => {\n    setNotes((notes) => notes.concat({ key: uuidv4() }));\n    setHasClickedDrum(true);\n\n    if (audioRef.current) {\n      audioRef.current.muted = false;\n      audioRef.current.currentTime = 0;\n      audioRef.current.play();\n    }\n\n    socket.emit(\"drumbeat\");\n\n    if (toUpdateCountRef.current !== null) {\n      toUpdateCountRef.current++;\n      updateDrumCount(toUpdateCountRef.current, activeAccount ? activeAccount.address : tempId);\n    } else {\n      toUpdateCountRef.current = 0;\n    }\n\n    setDrumCount((count) => count + 1);\n    setDrumReward((drumReward) => drumReward + 1);\n\n    //unclaimed(activeAccount.address);\n\n    //updateDrumCount(toUpdateCountRef.current, activeAccount.address);\n  };\n\n  // eslint-disable-next-line\n  //const updateDrumCount = useCallback(()=>{\n/*\n    if (toUpdateCountRef.current) {\n      firebaseUpdateDrumCount(toUpdateCountRef.current);\n      toUpdateCountRef.current = 0;\n    }\n    */\n  //}, []);\n\n  async function unsync() {\n\t\t//activeAccount = await dAppClient.getActiveAccount();\n    setActiveAccount( await dAppClient.getActiveAccount())\n\t\tif (activeAccount) {\n\t\t  // User already has account connected, everything is ready\n\t\t  // You can now do an operation request, sign request, or send another permission request to switch wallet\n\t\t  dAppClient.clearActiveAccount().then(async () => {\n      setActiveAccount( await dAppClient.getActiveAccount()) \n\t\t  //activeAccount = await dAppClient.getActiveAccount();\n\t\n\t\t\tsetSynced('sync');\n\t\t\tsetShowUnsync(false);\n\t\t\tsetBalance(0);\n      setDrumReward(0);\n\t\t  });\n\t\t}\n\t  }\n\t  \n\tasync function sync() {\n\t\t//activeAccount = await dAppClient.getActiveAccount();\n    setActiveAccount( await dAppClient.getActiveAccount())\n\t\tif (activeAccount) {\n\t\t  // User already has account connected, everything is ready\n\t\t  // You can now do an operation request, sign request, or send another permission request to switch wallet\n\n\t\t  console.log(\"Already connected:\", activeAccount.address);\n      setSynced(activeAccount.address)\n      let domain;\n      await fetch('https://api.tezos.domains/graphql', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          query: `\n              {\n                reverseRecord(address: \"`+ activeAccount.address +`\"){owner domain{name}}\n              }\n              `,\n          variables: {\n          },\n        }\n        ),\n        })\n        .then((res) => res.json())\n        .then((result) => {\n          console.log(result);\t\n          if(result.data.reverseRecord){\n            domain = result.data.reverseRecord.domain.name;\n            setSynced(domain);\n          }\n        });\n\t\t\tsetShowUnsync(true);\n\n\n\t\t  return activeAccount;\n\t\t} else {\n\t\t  // The user is not connected. A button should be displayed where the user can connect to his wallet.\n\t\t  console.log(\"Not connected!\");\n\t\t  try {\n\t\t\tconsole.log(\"Requesting permissions...\");\n\t\t\tconst permissions = await dAppClient.requestPermissions();\n      setActiveAccount( await dAppClient.getActiveAccount())\n\t\t\tconsole.log(\"Got permissions:\", permissions.address);\n\t\t\tsetSynced(permissions.address)\n      let domain;\n      await fetch('https://api.tezos.domains/graphql', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          query: `\n              {\n                reverseRecord(address: \"`+ permissions.address +`\"){owner domain{name}}\n              }\n              `,\n          variables: {\n          },\n        }\n        ),\n        })\n        .then((res) => res.json())\n        .then((result) => {\n          console.log(result);\t\n          if(result.data.reverseRecord){\n            domain = result.data.reverseRecord.domain.name;\n            setSynced(domain);\n          }\n        });\n\t\t\tsetShowUnsync(true);\n\n      getDrumCount(permissions.address).then((res) => {\n        if(res){\n          setDrumCount(res.count);\n          setDrumReward(res.claim);\n        }\n      });\n\n\t\t\tfetch('https://api.tzkt.io/v1/accounts/' + permissions.address)\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => setBalance(data.balance))\n\t\t  } catch (error) {\n\t\n\t\t\tconsole.log(\"Got error:\", error);\n\t\t  }\n\t\t}\n\t  }\n\n    async function claimRewards() {\n      claim(activeAccount ? activeAccount.address : tempId);\n      enqueueSnackbar(\"Recieved \" + drumReward + \" DRUM !\" , {\n        variant: \"success\",\n      });\n      setDrumReward(0);\n      /*\n      const RPC_URL = 'https://rpc.hangzhounet.teztnets.xyz';\n      const CONTRACT = 'KT1CeP9FpBS6oNeEsD2sPNTwbtHiF1hPvyJ9' //address of the published contract\n      const SENDER =   'tz1TwEj8RFB7vNscpZ2TdZ8aiCGeYk5LEQ2s' //public address of the sender (find it in acc.json)\n      const RECEIVER = 'tz1hQzwr9DBGEBqng1K4KWUgN5p4qCnZEYKR' // recipient's public address (take it from the Tezos wallet you had created)\n\n      if(drumReward > 0){\n        console.log(new token_transfer(RPC_URL).transfer(CONTRACT, SENDER, RECEIVER, drumReward));\n        enqueueSnackbar(\"Recieved \" + drumReward + \" DRUM !\" , {\n          variant: \"success\",\n        });\n        setDrumReward(0);\n      }\n      else{\n        enqueueSnackbar(\"You have nothing to claim :(\" , {\n          variant: \"warning\",\n        });\n      }\n      */\n    }\n  return (\n    <div\n      className=\"app-container\"\n      style={{ minHeight: window.innerHeight - 10 }}\n    >\n      <audio src={drumBeat} ref={audioRef} autoPlay muted />\n\n      <div className=\"top-left\" style={{fontSize: isMobile ? \"1em\" : \"1.5em\" }} > \t\n        drum\n      </div>\n\n      <div className=\"top-middle\"> \t\n        \n      </div>\n\n\n      {drumCount >= 0 && <div className=\"top-right\" style={{fontSize: isMobile ? \"1em\" : \"1.5em\" }}>{drumCount}  </div>}\n\n      <img\n        ref={drumRef}\n        onClick={onClickDrum}\n        alt=\"drum\"\n        src={drum}\n        className=\"drum\"\n      />\n      {!hasClickedDrum && <div>Click the drum!</div>}\n\n      <TransitionGroup>\n        {notes.map((note) => (\n          <CSSTransition\n            key={note.key}\n            timeout={1000}\n            classNames=\"note-transition\"\n            onEntered={() => {\n              const noteIndex = notes.findIndex(\n                (_note) => _note.key === note.key\n              );\n              setNotes([\n                ...notes.slice(0, noteIndex),\n                ...notes.slice(noteIndex + 1),\n              ]);\n            }}\n          >\n            <img\n              alt=\"music note\"\n              src={musicNote}\n              className=\"music-note\"\n              style={{\n                top: noteCoords.top,\n                left: noteCoords.left,\n              }}\n            />\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n\n      <div className=\"bottom-left\" >\n        <Button  title={\"Adventure Networks\"} size={isMobile ? \"small\" : \"medium\"}  onClick={() => { window.open('https://adventurenetworks.net/#/'); }} >Adventure <br></br> Networks </Button>\n      </div>\n\n      <div className=\"bottom-right\">\n        <div>  <img style={{width: 30}} src={construction}/> under construction <img style={{width: 30}} src={construction}/> </div>\n        <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n        {showUnsync ?\n        <Button  title={\"claim\"} size={isMobile ? \"small\" : \"medium\"}  onClick={ async () => { \tawait claimRewards();\t}} >  Claim {drumReward} DRUM  </Button> \n        :  <div style={{fontSize: isMobile ? \"1em\" : \"1.1em\", marginRight: 12 }}> sync to claim {drumReward} DRUM </div>\n        }\n        </div>\n\n        <div style={{display: \"flex\", alignItems: \"center\", justifyContent: \"flex-end\"}}>\n          {showUnsync && <Button size={isMobile ? \"small\" : \"medium\"}  title={\"unsync\"} onClick={() => { unsync() }} ><u>unsync</u> </Button>} \n          \n          {showUnsync && <div> | </div>}\n          <Button  title={\"sync\"} size={isMobile ? \"small\" : \"medium\"}  onClick={async () => { \tawait sync();\t}} ><u>{synced}</u> </Button> \n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import \"./index.css\";\n\nimport App from \"./App\";\nimport { FirebaseProvider } from \"./firebaseContext\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { SnackbarProvider } from \"notistack\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <FirebaseProvider>\n    <SnackbarProvider maxSnack={3}>\n      <App />\n    </SnackbarProvider>\n  </FirebaseProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}