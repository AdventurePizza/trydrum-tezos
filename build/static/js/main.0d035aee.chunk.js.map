{"version":3,"sources":["assets/drum.svg","assets/construction.png","assets/drumbeat.mp3","assets/musical-note.svg","firebaseContext.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["FirebaseContext","React","createContext","updateDrumCount","Promise","resolve","isSuccessful","getDrumCount","claim","syncRewards","fetchBase","FirebaseProvider","children","useCallback","amt","address","a","fetch","method","headers","body","JSON","stringify","fetchRes","ok","message","statusText","json","tempAddress","Provider","value","socketURL","window","location","hostname","socket","io","transports","dAppClient","DAppClient","name","tempId","uuidv4","App","useState","activeAccount","setActiveAccount","drumRef","createRef","audioRef","_audioRef","useRef","toUpdateCountRef","notes","setNotes","hasClickedDrum","setHasClickedDrum","useContext","drumCount","setDrumCount","enqueueSnackbar","useSnackbar","top","left","noteCoords","setNoteCoords","synced","setSynced","showUnsync","setShowUnsync","drumReward","setDrumReward","isMobile","innerWidth","getDomain","query","variables","then","res","result","data","reverseRecord","domain","getActiveAccount","slice","useEffect","getAcc","current","setCoords","rect","getBoundingClientRect","height","width","clearActiveAccount","sync","permissions","updatedBalance","console","log","requestPermissions","count","claimRewards","variant","success","onClick","open","onDrumbeat","currentTime","play","concat","key","on","addEventListener","off","removeEventListener","className","style","minHeight","innerHeight","src","drumBeat","ref","autoPlay","muted","fontSize","emit","alt","drum","TransitionGroup","map","note","CSSTransition","timeout","classNames","onEntered","noteIndex","findIndex","_note","musicNote","Button","title","size","textAlign","construction","display","justifyContent","marginRight","alignItems","unsync","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","maxSnack","document","getElementById"],"mappings":"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","file":"static/js/main.0d035aee.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/drum.5ae1d20c.svg\";","export default __webpack_public_path__ + \"static/media/construction.9e9ab6c6.png\";","export default __webpack_public_path__ + \"static/media/drumbeat.e0f520f5.mp3\";","export default __webpack_public_path__ + \"static/media/musical-note.49e6a279.svg\";","// @ts-nocheck\nimport React, { useCallback, useContext, useEffect } from 'react';\n\n\nexport interface IFirebaseContext {\n\tupdateDrumCount: (amt: number, address: string) => void;\n\tgetDrumCount: (address: string) => Promise<IFetchResponseBase>;\n\tclaim: (address: string) => Promise<IFetchResponseBase>;\n\tsyncRewards: (tempAddress: string, address: string) => void;\n}\n\nexport const FirebaseContext = React.createContext<IFirebaseContext>({\n\tupdateDrumCount: () => Promise.resolve({ isSuccessful: false }),\n\tgetDrumCount: () => Promise.resolve({ isSuccessful: false }),\n\tclaim: () => Promise.resolve({ isSuccessful: false }),\n\tsyncRewards: () => Promise.resolve({ isSuccessful: false }),\n});\n\nconst fetchBase =\n\tprocess.env.NODE_ENV === 'development'\n\t\t? ''\n\t\t: 'https://trydrum-backend.herokuapp.com';\n\n\nexport const FirebaseProvider: React.FC = ({ children }) => {\n\n\tconst updateDrumCount = useCallback(\n\t\tasync (amt: number, address: string): Promise<IFetchResponseBase> => {\n\t\t\tconst fetchRes = await fetch(fetchBase + `/users/drum/${address}`, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({ amt: amt})\n\t\t\t});\n\n\t\t\tif (fetchRes.ok) {\n\t\t\t\treturn { isSuccessful: true };\n\t\t\t}\n\n\t\t\treturn { isSuccessful: false, message: fetchRes.statusText };\n\t\t},\n\t\t[]\n\t);\n\n\tconst claim = useCallback(\n\t\tasync (address: string): Promise<IFetchResponseBase> => {\n\n\t\t\tconst fetchRes = await fetch(fetchBase + `/users/drum/claim/${address}`, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (fetchRes.ok) {\n\t\t\t\treturn  await fetchRes.json();\n\t\t\t}\n\n\t\t\treturn { isSuccessful: false, message: fetchRes.statusText };\n\t\t},\n\t\t[]\n\t);\n\n\tconst getDrumCount = useCallback(\n\t\tasync (address: string): Promise<IFetchResponseBase> => {\n\t\t\tconst fetchRes = await fetch(fetchBase + `/users/drum/${address}`, {\n\t\t\t\tmethod: 'GET'\n\t\t\t});\n\n\t\t\tif (fetchRes.ok) {\n\t\t\t\treturn  await fetchRes.json();\n\t\t\t}\n\t\t},\n\t\t[]\n\t);\n\n\tconst syncRewards = useCallback(\n\t\tasync (tempAddress: string, address: string): Promise<IFetchResponseBase> => {\n\t\t\t\n\t\t\tconst fetchRes = await fetch(fetchBase + `/users/drum/sync/${address}`, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({ tempAddress: tempAddress})\n\t\t\t});\n\n\t\t\tif (fetchRes.ok) {\n\t\t\t\treturn  await fetchRes.json();\n\t\t\t}\n\n\t\t\treturn { isSuccessful: false, message: fetchRes.statusText };\n\t\t},\n\t\t[]\n\t);\n\n\treturn (\n\t\t<FirebaseContext.Provider\n\t\t\tvalue={{\n\t\t\t\tupdateDrumCount,\n\t\t\t\tclaim,\n\t\t\t\tgetDrumCount,\n\t\t\t\tsyncRewards\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</FirebaseContext.Provider>\n\t);\n};\n","\n// @ts-nocheck\n\nimport \"./App.css\";\n\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\"; // ES6\nimport React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\n\n//ui\nimport { IconButton, Button } from \"@material-ui/core\";\nimport _ from \"underscore\";\nimport drum from \"./assets/drum.svg\";\nimport construction from \"./assets/construction.png\";\nimport drumBeat from \"./assets/drumbeat.mp3\";\nimport musicNote from \"./assets/musical-note.svg\";\n\n//logic\nimport io from \"socket.io-client\";\nimport { useSnackbar } from \"notistack\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { DAppClient } from \"@airgap/beacon-sdk\";\nimport { FirebaseContext } from \"./firebaseContext\";\n\nconst socketURL =\n  window.location.hostname === \"localhost\"\n    ? \"ws://localhost:8000\"\n    : \"wss://trydrum-backend.herokuapp.com\";\n\n\nconst socket = io(socketURL, { transports: [\"websocket\"] });\nconst dAppClient = new DAppClient({ name: \"Beacon Docs\" });\nconst tempId = uuidv4();\n\ninterface INote {\n  key: string;\n}\n\nfunction App() {\n  const [activeAccount, setActiveAccount] = useState();\n  const drumRef = React.createRef<HTMLImageElement>();\n  const audioRef = React.createRef<HTMLAudioElement>();\n  const _audioRef = useRef<HTMLAudioElement>();\n  const toUpdateCountRef = useRef<number>(0);\n  const [notes, setNotes] = useState<INote[]>([]);\n  const [hasClickedDrum, setHasClickedDrum] = useState(false);\n  const { updateDrumCount, claim, getDrumCount, syncRewards } = useContext(\n    FirebaseContext\n  );\n  const [drumCount, setDrumCount] = useState(-1);\n  const { enqueueSnackbar } = useSnackbar();\n  const [noteCoords, setNoteCoords] = useState<{ top: number; left: number }>({\n    top: 0,\n    left: 0,\n  });\n\tconst [synced, setSynced] = useState('sync');\n\tconst [showUnsync, setShowUnsync] = useState(false);\n  const [drumReward, setDrumReward] = useState(0);\n  const isMobile = window.innerWidth <= 500;\n\n  //fetch wallet name if it exist for example, trydrum.tez\n  async function getDomain(address: string) {\n    let domain;\n    await fetch('https://api.tezos.domains/graphql', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        query: `\n            {\n              reverseRecord(address: \"`+ address +`\"){owner domain{name}}\n            }\n            `,\n        variables: {\n        },\n      }\n      ),\n      })\n      .then((res) => res.json())\n      .then((result) => {\n        //console.log(result);\t\n        if(result.data.reverseRecord){\n          domain = result.data.reverseRecord.domain.name;\n          setSynced(domain);\n        }\n      });\n  }\n\n  async function getAcc() {\n    setActiveAccount( await dAppClient.getActiveAccount());\n    if (activeAccount){\n      setSynced(activeAccount.address.slice(0, 6) + \"...\" + activeAccount.address.slice(32, 36) );\n      setShowUnsync(true);\n      getDomain(activeAccount.address);\n    }\n    else{\n      setSynced('sync');\n      setShowUnsync(false);\n    }\n  }\n\n  useEffect(() => {\n\t\tgetAcc();\n\t}, [activeAccount]);\n\n  useEffect(() => {\n    if (audioRef.current) {\n      _audioRef.current = audioRef.current;\n    }\n  });\n\n  const setCoords = useCallback(() => {\n    if (drumRef.current) {\n      const rect = drumRef.current.getBoundingClientRect();\n      setNoteCoords({\n        top: rect.top - rect.height / 2,\n        left: rect.left + rect.width / 2 - 25, // noteWidth = 50\n      });\n    }\n  }, [drumRef]);\n\n  \n  useEffect(() => {\n    getDrumCount(activeAccount ? activeAccount.address : tempId).then((res) => {\n      if(res){\n        setDrumCount(res.count);\n        setDrumReward(res.claim);\n      }\n    });\n  }, [getDrumCount, activeAccount]);\n\n\n  useEffect(() => {\n    const onDrumbeat = () => {\n      if (_audioRef.current) {\n        _audioRef.current.currentTime = 0;\n        _audioRef.current.play();\n        setDrumCount((count) => count + 1);\n      }\n\n      setNotes((notes) => notes.concat({ key: uuidv4() }));\n      enqueueSnackbar(\"someone beat the drum!\", {\n        variant: \"default\",\n      });\n    };\n\n    socket.on(\"drumbeat\", onDrumbeat);\n\n    window.addEventListener(\"resize\", setCoords);\n\n    return () => {\n      socket.off(\"drumbeat\", onDrumbeat);\n      window.removeEventListener(\"resize\", setCoords);\n    };\n  }, [enqueueSnackbar, setCoords]);\n\n  useEffect(() => {\n    if (drumRef.current && (noteCoords.top === 0 || noteCoords.left === 0)) {\n      setCoords();\n    }\n  }, [drumRef, noteCoords, setCoords]);\n\n  const onClickDrum = () => {\n    setNotes((notes) => notes.concat({ key: uuidv4() }));\n    setHasClickedDrum(true);\n\n    if (audioRef.current) {\n      audioRef.current.muted = false;\n      audioRef.current.currentTime = 0;\n      audioRef.current.play();\n    }\n\n    socket.emit(\"drumbeat\");\n\n    if (toUpdateCountRef.current !== null) {\n      toUpdateCountRef.current++;\n      updateDrumCount(toUpdateCountRef.current, activeAccount ? activeAccount.address : tempId);\n    } else {\n      toUpdateCountRef.current = 0;\n    }\n\n    setDrumCount((count) => count + 1);\n    setDrumReward((drumReward) => drumReward + 1);\n  };\n\n  async function unsync() {\n    setActiveAccount( await dAppClient.getActiveAccount())\n\t\tif (activeAccount) {\n\t\t  // User already has account connected, everything is ready\n\t\t  dAppClient.clearActiveAccount().then(async () => {\n        setActiveAccount( await dAppClient.getActiveAccount()) \n        setSynced('sync');\n        setShowUnsync(false);\n        setDrumReward(0);\n\t\t  });\n\t\t}\n\t}\n\t  \n\tasync function sync() {\n    setActiveAccount( await dAppClient.getActiveAccount())\n    //Already connected\n\t\tif (activeAccount) {\n      setSynced(activeAccount.address)\n\t\t\tsetShowUnsync(true);\n      getDomain(activeAccount.address);\n\n      //A call for sending rewards to real account from the temporaray one \n      const updatedBalance = (await syncRewards(tempId, permissions.address)).updatedBalance;\n      console.log( updatedBalance)\n      setDrumReward(updatedBalance);\n\t\t  return activeAccount;\n\t\t} \n    // The user is not synced yet\n    else {\n\t\t  try {\n        console.log(\"Requesting permissions...\");\n        const permissions = await dAppClient.requestPermissions();\n        setActiveAccount( await dAppClient.getActiveAccount())\n        console.log(\"Got permissions:\", permissions.address);\n        setSynced(permissions.address)\n        setShowUnsync(true);\n\n        getDomain(permissions.address);\n\n        //A call for sending rewards to real account from the temporaray one \n        const updatedBalance = (await syncRewards(tempId, permissions.address)).updatedBalance;\n        console.log( updatedBalance)\n        setDrumReward(updatedBalance);\n\n        getDrumCount(permissions.address).then((res) => {\n          if(res){\n            setDrumCount(res.count);\n            setDrumReward(res.claim);\n          }\n        });\n\n\t\t  } \n      catch (error) {\n\t\t\t  console.log(\"Got error:\", error);\n\t\t  }\n\t\t}\n\t}\n\n  async function claimRewards() {\n\n    enqueueSnackbar(\"Sending \" + drumReward + \" DRUM !\" , {\n      variant: \"default\",\n    });\n\n    const result = await claim(activeAccount ? activeAccount.address : tempId);\n    if(result.success){\n      enqueueSnackbar( <div onClick={() => { window.open(result.message); }} > hash:  {result.message}  </div>   , {\n        variant: \"success\",\n      });\n    }else{\n      enqueueSnackbar( result.message  , {\n        variant: \"error\",\n      });\n    }\n    setDrumReward(0);\n  }\n\n  return (\n    <div\n      className=\"app-container\"\n      style={{ minHeight: window.innerHeight - 10 }}\n    >\n      <audio src={drumBeat} ref={audioRef} autoPlay muted />\n\n      <div className=\"top-left\" style={{fontSize: isMobile ? \"1em\" : \"1.5em\" }} > \t\n        drum\n      </div>\n\n      <div className=\"top-middle\"> \t\n        \n      </div>\n\n\n      {drumCount >= 0 && <div className=\"top-right\" style={{fontSize: isMobile ? \"1em\" : \"1.5em\" }}>{drumCount}  </div>}\n\n      <img\n        ref={drumRef}\n        onClick={onClickDrum}\n        alt=\"drum\"\n        src={drum}\n        className=\"drum\"\n      />\n      {!hasClickedDrum && <div>Click the drum!</div>}\n\n      <TransitionGroup>\n        {notes.map((note) => (\n          <CSSTransition\n            key={note.key}\n            timeout={1000}\n            classNames=\"note-transition\"\n            onEntered={() => {\n              const noteIndex = notes.findIndex(\n                (_note) => _note.key === note.key\n              );\n              setNotes([\n                ...notes.slice(0, noteIndex),\n                ...notes.slice(noteIndex + 1),\n              ]);\n            }}\n          >\n            <img\n              alt=\"music note\"\n              src={musicNote}\n              className=\"music-note\"\n              style={{\n                top: noteCoords.top,\n                left: noteCoords.left,\n              }}\n            />\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n\n      <div className=\"bottom-left\" >\n        <Button  title={\"Adventure Networks\"} size={isMobile ? \"small\" : \"medium\"}  onClick={() => { window.open('https://adventurenetworks.net/#/'); }} >  <div style={{textAlign: \"left\"}}> Adventure <br></br>Networks </div> </Button>\n      </div>\n\n      <div className=\"bottom-right\">\n        <div>  <img style={{width: 30}} src={construction}/> under construction <img style={{width: 30}} src={construction}/> </div>\n        <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\n        {showUnsync ?\n        <Button  title={\"claim\"} size={isMobile ? \"small\" : \"medium\"}  onClick={ async () => { \tawait claimRewards();\t}} >  Claim {drumReward} DRUM  </Button> \n        :  <div style={{fontSize: isMobile ? \"1em\" : \"1.1em\", marginRight: 12 }}> sync to claim {drumReward} DRUM </div>\n        }\n        </div>\n\n        <div style={{display: \"flex\", alignItems: \"center\", justifyContent: \"flex-end\"}}>\n          {showUnsync && <Button size={isMobile ? \"small\" : \"medium\"}  title={\"unsync\"} onClick={() => { unsync() }} ><u>unsync</u> </Button>} \n          \n          {showUnsync && <div> | </div>}\n          <Button  title={\"sync\"} size={isMobile ? \"small\" : \"medium\"}  onClick={async () => { \tawait sync();\t}} ><u>{synced}</u> </Button> \n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n\t//const [xtzPrice, setXtzPrice] = useState(0);\n\t//const [balance, setBalance] = useState(0);\n      /* \n      //set XTZ balance\n      fetch('https://api.tzkt.io/v1/accounts/' + activeAccount.address)\n      .then(response => response.json())\n      .then(data => setBalance(data.balance))\n\n      fetch('https://min-api.cryptocompare.com/data/price?fsym=XTZ&tsyms=USD')\n      .then(response => response.json())\n      .then(data => setXtzPrice(data.USD))\n      */\n\n        /*\n        fetch('https://api.tzkt.io/v1/accounts/' + permissions.address)\n        .then(response => response.json())\n        .then(data => setBalance(data.balance))\n        */","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import \"./index.css\";\n\nimport App from \"./App\";\nimport { FirebaseProvider } from \"./firebaseContext\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { SnackbarProvider } from \"notistack\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <FirebaseProvider>\n    <SnackbarProvider maxSnack={3}>\n      <App />\n    </SnackbarProvider>\n  </FirebaseProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}